datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String     @id @default(cuid())
    name          String?
    email         String?    @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    templates     Template[]
    contacts      Contact[]
    drafts        Draft[]
}

model Contact {
    id          String   @id @default(cuid())
    firstName   String
    lastName    String
    name        String
    email       String
    linkedinUrl String?
    title       String?
    companyId   String?
    userId      String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    drafts  Draft[]
    company Company? @relation(fields: [companyId], references: [id])

    @@index([userId])
    @@index([companyId])
}

model Company {
    id        String    @id @default(cuid())
    userId    String
    name      String
    website   String?
    domain    String?
    contacts  Contact[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Template {
    id      String @id @default(cuid())
    userId  String
    name    String
    subject String @default("")
    content String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    drafts    Draft[]
}

model Draft {
    id           String    @id @default(cuid())
    userId       String
    contactId    String
    templateId   String
    content      String
    gmailDraftId String?
    sent         Boolean   @default(false)
    sentAt       DateTime?
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt

    user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    contact  Contact  @relation(fields: [contactId], references: [id], onDelete: Cascade)
    template Template @relation(fields: [templateId], references: [id])
}
